syntax = "proto3";

package COD.Types;

message Vector
{
	float x = 1;
	float y = 2;
	float z = 3;
}

message Quaternion
{
	float x = 1;
	float y = 2;
	float z = 3;
	float w = 4;
}

enum LevelNodeShape
{
	START = 0;
	FINISH = 1;
	SIGN = 2;

	__END_OF_SPECIAL_PARTS__ = 3;

	CUBE = 1000;
	SPHERE = 1001;
	CYLINDER = 1002;
	PYRAMID = 1003;
	PRISM = 1004;
}

enum LevelNodeMaterial
{
	DEFAULT = 0;
	GRABBABLE = 1;
	ICE = 2;
	LAVA = 3;
	WOOD = 4;
	GRAPPLABLE = 5;
	GRAPPLABLE_LAVA = 6;

	GRABBABLE_CRUMBLING= 7;
}

message LevelNodeStart
{
	Vector position = 1;
	Quaternion rotation = 2; //Should always be upright and is meant to be used for the player rotation on spawn
	float radius = 3;
}

message LevelNodeFinish
{
	Vector position = 1;
	float radius = 2;
}

message LevelNodeStatic
{
	LevelNodeShape shape = 1; //Must be one of CUBE, SPHERE, CYLINDER, PYRAMID, PRISM
	LevelNodeMaterial material = 2; //Can not be GRABBABLE_CRUMBLING

	Vector position = 3;
	Vector scale = 4;
	Quaternion rotation = 5;
}

message LevelNodeCrumbling
{
	LevelNodeShape shape = 1; //Must be one of CUBE, SPHERE, CYLINDER, PYRAMID, PRISM
	LevelNodeMaterial material = 2; //Must be GRABBABLE_CRUMBLING

	Vector position = 3;
	Vector scale = 4;
	Quaternion rotation = 5;

	float stableTime = 6;
	float respawnTime = 7;
}

message LevelNodeSign
{
	Vector position = 1;
	Quaternion rotation = 2;

	string text = 3;
}

message LevelNode
{
	oneof content
	{
		Types.LevelNodeStart levelNodeStart = 1;
		Types.LevelNodeFinish levelNodeFinish = 2;
		Types.LevelNodeStatic levelNodeStatic = 3;
		Types.LevelNodeSign levelNodeSign = 4;
		Types.LevelNodeCrumbling levelNodeCrumbling = 5;
	}
}
